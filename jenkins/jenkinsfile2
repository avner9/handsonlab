pipeline {
	agent any
	stages {
		stage('Checkout code repo') {
			steps {
			withCredentials([[
				$class: 'AmazonWebServicesCredentialsBinding',
				credentialsId: 'fd4fa4b1-1e70-43de-b796-e13753ecd881',
				accessKeyVariable: 'AWS_ACCESS_KEY_ID',
				secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
			]]){
					sh '''
					   env | sort -u
					   aws sts get-caller-identity
					   /usr/bin/packer -machine-readable version
					   if [ -d "handsonlab" ]; then rm -Rf handsonlab; fi
					   git clone https://github.com/d2si/handsonlab.git
					'''
			}
		  }
		} 
		stage('Packer Validate') {
			steps {
			withCredentials([[
				$class: 'AmazonWebServicesCredentialsBinding',
				credentialsId: 'fd4fa4b1-1e70-43de-b796-e13753ecd881',
				accessKeyVariable: 'AWS_ACCESS_KEY_ID',
				secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
			]])
				{
					sh '''
					   env | sort -u
					   aws sts get-caller-identity
					   cd $WORKSPACE/handsonlab/packer
					   /usr/bin/packer validate packer_nginx.json
					'''
				}
			}
		}
		stage('Packer Build') {
			steps {
			withCredentials([[
				$class: 'AmazonWebServicesCredentialsBinding',
				credentialsId: 'fd4fa4b1-1e70-43de-b796-e13753ecd881',
				accessKeyVariable: 'AWS_ACCESS_KEY_ID',
				secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
			]])
				{
					sh '''
					   env | sort -u
					   aws sts get-caller-identity
					   cd $WORKSPACE/handsonlab/packer
					'''
				}
			}
		}
		stage('Terraform  Init VPC') {
			steps {
			withCredentials([[
				$class: 'AmazonWebServicesCredentialsBinding',
				credentialsId: 'fd4fa4b1-1e70-43de-b796-e13753ecd881',
				accessKeyVariable: 'AWS_ACCESS_KEY_ID',
				secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
			]])
				{
					sh '''
					   env | sort -u
					   aws sts get-caller-identity
					   cd $WORKSPACE/handsonlab/terraform/infra/vpc
					   /usr/sbin/terraform --version
					   /usr/sbin/terraform init
					'''
				}
			}
		} 
		stage('Terraform Plan VPC') {
			steps {
				script {
					withCredentials([[
						$class: 'AmazonWebServicesCredentialsBinding',
						credentialsId: 'fd4fa4b1-1e70-43de-b796-e13753ecd881',
						accessKeyVariable: 'AWS_ACCESS_KEY_ID',
						secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
					]])
					env.exitCode = sh(returnStatus:true, script:'ls!:')
					if  (env.exitCode == '127') {
						echo "out: ${env.exitCode}"
						currentBuild.result = 'FAILURE'
						currentStage.result = 'FAILURE'
					}
				}
			}
		}
		stage('Terraform Apply VPC') {
			when {
				equals expected: 0, actual: env.exitCode
			}
			steps {
			withCredentials([[
				$class: 'AmazonWebServicesCredentialsBinding',
				credentialsId: 'fd4fa4b1-1e70-43de-b796-e13753ecd881',
				accessKeyVariable: 'AWS_ACCESS_KEY_ID',
				secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
			]])
				{
					echo "out: ${env.exitCode}"
					sh '''
					   env | sort -u
					   aws sts get-caller-identity
					   cd $WORKSPACE/handsonlab/terraform/terraform/vpc
					   /usr/sbin/terraform --version
					   /usr/sbin/terraform apply -detailed-exitcode -var-file=terraform.tfvars
					'''
				}
			   } 	
		}
	}	
}